= Introduction =
[[Image:CT_EDIT.jpg|thumb|400px|Two examples for the edit box.]]
An '''edit'''able text '''box''', which allows the user to either enter text himself or to select and copy its content.

= Alphabetical Order =
<syntaxhighlight lang="cpp">#define CT_EDIT 2</syntaxhighlight>
{{Cfg ref|start}}
{{Cfg ref|abc}}
=== A ===
==== autocomplete ====
;Type: [[TokenNameValueTypes|String]], [[TokenNameValueTypes|Number]]
;Description: one of:
* "" (no autocompletion)
* "scripting" (entered text will automatically be completed with matching script command)
* "general" (autocomplete will use some of the last entered words like the chat does)
<syntaxhighlight lang="cpp">
autocomplete = "general";
</syntaxhighlight>
=== C ===
==== canModify ====
;Type: [[TokenNameValueTypes|Number]], [[TokenNameValueTypes|String]]
;Description: When 0, only LEFT/RIGHT/HOME/END, CTRL + C, SHIFT + LEFT/RIGHT/HOME/END keys are allowed
<syntaxhighlight lang="cpp">
canModify = 1;
</syntaxhighlight>
<!-- ==== colorActive ====
;Type: [[TokenNameValueTypes|Array]]
;Description: n/a
<syntaxhighlight lang="cpp">
colorActive[] = {0.23, 0.35, 0.42, 0.9};
</syntaxhighlight> -->
==== colorSelection ====
;Type: [[TokenNameValueTypes|Array]]
;Description: The text selection highlight color.
<syntaxhighlight lang="cpp">
colorSelection[] = {"(profilenamespace getvariable ['GUI_BCG_RGB_R',0.13])", "(profilenamespace getvariable ['GUI_BCG_RGB_G',0.54])", "(profilenamespace getvariable ['GUI_BCG_RGB_B',0.21])", 1};
</syntaxhighlight>
=== F ===
==== forceDrawCaret ====
;Type: [[TokenNameValueTypes|Number]]
;Description: When 1, the caret will be drawn even when control has no focus or is disabled
<syntaxhighlight lang="cpp">
forceDrawCaret = 1;
</syntaxhighlight>
<!-- === L ===
==== linespacing ====
;Type: [[TokenNameValueTypes|Number]]
;Description: n/a
<syntaxhighlight lang="cpp">
linespacing = 1;
</syntaxhighlight> -->
=== M ===
==== maxChars ====
;Type: [[TokenNameValueTypes|Number]]
;Description: The limit for how many characters could be displayed or entered, counting new line characters too.
<syntaxhighlight lang="cpp">
maxChars = 45;
</syntaxhighlight>
=== S ===
==== shadow ====
;Type: [[TokenNameValueTypes|Number]]
;Description: Possible values: 0 (no shadow), 2 (text outline).
<syntaxhighlight lang="cpp">
shadow = 2;
</syntaxhighlight>
<!-- ==== size ====
;Type: [[TokenNameValueTypes|Number]]
;Description: n/a
<syntaxhighlight lang="cpp">
size = 0.2;
</syntaxhighlight> -->
{{Cfg ref|end}}

= Default Classes =
The following classes are part of the export that is generated with
<code>"Default" call [[BIS_fnc_exportGUIBaseClasses]]</code>
{{Informative|In order for the classes below to work you need to have them exported with the function above.}}

== RscEdit ==
<syntaxhighlight lang="cpp">
class RscEdit
{
	deletable = 0;
	fade = 0;
	access = 0;
	type = CT_EDIT;
	x = 0;
	y = 0;
	h = 0.04;
	w = 0.2;
	colorBackground[] = {0,0,0,0};
	colorText[] = {0.95,0.95,0.95,1};
	colorDisabled[] = {1,1,1,0.25};
	colorSelection[] =
	{
		"(profilenamespace getvariable ['GUI_BCG_RGB_R',0.13])",
		"(profilenamespace getvariable ['GUI_BCG_RGB_G',0.54])",
		"(profilenamespace getvariable ['GUI_BCG_RGB_B',0.21])",
		1
	};
	autocomplete = "";
	text = "";
	size = 0.2;
	style = ST_FRAME;
	font = "RobotoCondensed";
	shadow = 2;
	sizeEx = GUI_TEXT_SIZE_MEDIUM;
	canModify = 1;
	tooltipColorText[] = {1,1,1,1};
	tooltipColorBox[] = {1,1,1,1};
	tooltipColorShade[] = {0,0,0,0.65};
};
</syntaxhighlight>
