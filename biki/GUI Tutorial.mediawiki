- Create mission
- Create description.ext
- add lines:
#include "ui\defines.hpp"
#include "ui\BaseControls.hpp"
#include "ui\RscDisplayTagDisplayName.hpp"
- Create these files
- defines.hpp
#include "\a3\ui_f\hpp\defineCommon.inc"
#include "\a3\ui_f\hpp\defineResincl.inc"
#include "\a3\3den\UI\macros.inc"
#include "idcs.inc"
- Create the idcs.inc (empty)
- BaseControls.hpp:
// >v2.00
import RscText;
import RscButtonMenu;
import RscListNBox;

- (link to CT_CONTROLS)
- each ct has a different functionality


- add lines:
class RscDisplayTagDisplayName
{
	idd = -1;
	class controlsBackground
	{
		class Title: RscText
		{
			idc = -1;
			x = GUI_GRID_CENTER_X + 5 * GUI_GRID_CENTER_W;
			y = GUI_GRID_CENTER_Y + 2.5 * GUI_GRID_CENTER_H;
			w = 30 * GUI_GRID_CENTER_W;
			h = 1 * GUI_GRID_CENTER_H;
			colorBackground[] = GUI_BCG_COLOR;
		};
		class Background: RscText // classname : parent
		{
			idc = -1;
			x = GUI_GRID_CENTER_X + 5 * GUI_GRID_CENTER_W;
			y = GUI_GRID_CENTER_Y + 3.6 * GUI_GRID_CENTER_H;
			w = 30 * GUI_GRID_CENTER_W;
			h = 18.9 * GUI_GRID_CENTER_H;
			colorBackground[] = {0, 0, 0, 0.8};
		};
	};
	class controls
	{
		class ListOfItems: RscText//RscListNBox
		{
			idc = IDC_RSCDISPLAYTAGDISPLAYNAME_LISTOFITEMS;
			x = GUI_GRID_CENTER_X + 5.1 * GUI_GRID_CENTER_W;
			y = GUI_GRID_CENTER_Y + 3.7 * GUI_GRID_CENTER_H;
			w = 29.8 * GUI_GRID_CENTER_W;
			h = 18.7 * GUI_GRID_CENTER_H;
			colorBackground[] = {1,0,0,0.2};
		};
	};

};
- idd is neccessary
- idd: identification display, idc: identification control

Controls:
- parent: control gets all settings from parent
- idc: neccessary, can be -1 if not important
- define idc in idcs.inc
#define IDC_RSCDISPLAYTAGDISPLAYNAME_LISTOFITEMS 100
- numbers greater than 5, whole numbers

Testing:
- in 3den
- open debug console
findDisplay 313 createDisplay "RscDisplayTagDisplayName";
- To reload mission config: Save the 3den mission
- !If you are not in eden this command will crash your game!
- If you want to test inside of you mission use:
createDialog "RscDisplayTagDisplayName";
- To reload: Return to eden, save, start again

Script:
- onLoad event:
onLoad = "['onLoad', _this] call TAG_fnc_RscDisplayTagDisplayName;";

description.ext:
class CfgFunctions
{
	class TAG
	{
		class UI
		{
			file = "ui\scripts";
			class RscDisplayTagDisplayName;
		};
	};
};

- Create fille: ui\scripts\TAG_fnc_RscDisplayTagDisplayName.sqf
#include "..\idcs.inc"
- .. means one dir up
params ["_mode", "_params"];
switch _mode do {
	case "onLoad":{
		_params params ["_display", "_cfgDisplay"];
		_ctrlListOfItems = _display displayCtrl IDC_RSCDISPLAYTAGDISPLAYNAME_LISTOFITEMS;



- link to uieh:
onLoad has params display and config
- link to displayCtrl:
displayCtrl accesses the control with the given idc on the display
- Control and displays are their own datatype

_index = _ctrlListOfItems lnbAddRow ["Column 1", "column 2"];

- in the example codes on the biki the _ctrl <command> args is the better option as it is precise. Otherwise you might reference a control from another display by accident